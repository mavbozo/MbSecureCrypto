{"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["occ"],"platforms":["iOS"],"tokens":[{"kind":"text","text":"+ ("},{"preciseIdentifier":"c:objc(cs)NSData","kind":"typeIdentifier","text":"NSData"},{"kind":"text","text":" *) "},{"text":"generateBytes:","kind":"identifier"},{"kind":"text","text":"("},{"text":"NSUInteger","kind":"typeIdentifier","preciseIdentifier":"c:@T@NSUInteger"},{"kind":"text","text":") "},{"text":"byteCount","kind":"internalParam"},{"text":" ","kind":"text"},{"kind":"identifier","text":"error:"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"c:objc(cs)NSError","text":"NSError"},{"kind":"text","text":" * *) "},{"kind":"internalParam","text":"error"},{"text":";","kind":"text"}]}]},{"parameters":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Number of random bytes to generate (1 to 1,048,576 bytes)"}]}],"name":"byteCount"},{"name":"error","content":[{"inlineContent":[{"type":"text","text":"Error object populated on failure with codes:"}],"type":"paragraph"},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"MBSRandomErrorInvalidByteCount (100): Invalid size requested"}]}]},{"content":[{"inlineContent":[{"type":"text","text":"MBSRandomErrorGenerationFailed (101): Generation failed"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"MBSRandomErrorBufferAllocation (102): Memory allocation failed"}],"type":"paragraph"}]}]}]}],"kind":"parameters"},{"kind":"content","content":[{"anchor":"return-value","level":2,"text":"Return Value","type":"heading"},{"type":"paragraph","inlineContent":[{"text":"NSData containing the requested random bytes, or nil on failure","type":"text"}]}]},{"kind":"content","content":[{"text":"Discussion","type":"heading","level":2,"anchor":"discussion"},{"inlineContent":[{"type":"text","text":"Uses SecRandomCopyBytes to generate high-quality random numbers suitable for"},{"text":" ","type":"text"},{"type":"text","text":"cryptographic operations. The implementation ensures secure memory handling"},{"type":"text","text":" "},{"text":"and proper cleanup of sensitive data.","type":"text"}],"type":"paragraph"},{"content":[{"inlineContent":[{"type":"text","text":"Sensitive data is securely cleared from memory after use"}],"type":"paragraph"}],"style":"note","name":"Note","type":"aside"}]}],"metadata":{"fragments":[{"kind":"text","text":"+ "},{"kind":"identifier","text":"generateBytes:error:"}],"title":"generateBytes:error:","role":"symbol","navigatorTitle":[{"text":"generateBytes:error:","kind":"identifier"}],"roleHeading":"Type Method","symbolKind":"method","modules":[{"name":"MbSecureCrypto"}],"externalID":"c:objc(cs)MBSRandom(cm)generateBytes:error:"},"hierarchy":{"paths":[["doc:\/\/MbSecureCrypto\/documentation\/MbSecureCrypto","doc:\/\/MbSecureCrypto\/documentation\/MbSecureCrypto\/MBSRandom"]]},"schemaVersion":{"major":0,"minor":3,"patch":0},"abstract":[{"type":"text","text":"Generates cryptographically secure random bytes."}],"sections":[],"identifier":{"interfaceLanguage":"occ","url":"doc:\/\/MbSecureCrypto\/documentation\/MbSecureCrypto\/MBSRandom\/generateBytes:error:"},"kind":"symbol","variants":[{"traits":[{"interfaceLanguage":"occ"}],"paths":["\/documentation\/mbsecurecrypto\/mbsrandom\/generatebytes:error:"]}],"references":{"doc://MbSecureCrypto/documentation/MbSecureCrypto/MBSRandom/generateBytes:error:":{"abstract":[{"type":"text","text":"Generates cryptographically secure random bytes."}],"navigatorTitle":[{"text":"generateBytes:error:","kind":"identifier"}],"fragments":[{"kind":"text","text":"+ "},{"text":"generateBytes:error:","kind":"identifier"}],"identifier":"doc:\/\/MbSecureCrypto\/documentation\/MbSecureCrypto\/MBSRandom\/generateBytes:error:","type":"topic","kind":"symbol","title":"generateBytes:error:","url":"\/documentation\/mbsecurecrypto\/mbsrandom\/generatebytes:error:","role":"symbol"},"doc://MbSecureCrypto/documentation/MbSecureCrypto/MBSRandom":{"kind":"symbol","fragments":[{"kind":"identifier","text":"MBSRandom"}],"type":"topic","identifier":"doc:\/\/MbSecureCrypto\/documentation\/MbSecureCrypto\/MBSRandom","url":"\/documentation\/mbsecurecrypto\/mbsrandom","role":"symbol","title":"MBSRandom","abstract":[{"text":"A utility class that provides cryptographically secure random number generation.","type":"text"}]},"doc://MbSecureCrypto/documentation/MbSecureCrypto":{"title":"MbSecureCrypto","identifier":"doc:\/\/MbSecureCrypto\/documentation\/MbSecureCrypto","abstract":[{"type":"text","text":"A secure cryptography library for iOS and macOS that provides cryptographically secure random number generation and encryption capabilities."}],"type":"topic","url":"\/documentation\/mbsecurecrypto","role":"collection","kind":"symbol"}}}